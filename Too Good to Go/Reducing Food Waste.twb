<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0114.1153                               -->
<workbook original-version='18.1' source-build='2024.3.3 (20243.25.0114.1153)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='ReducingFoodWaste' path='/workbooks' revision='1.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Restaurants+ (nyc_restaurant_data)' inline='true' name='federated.1s0llsg1brtrxz12dmleb1imtzmv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='nyc_restaurant_data' name='excel-direct.1xtyswo12cd5vx171lhjb1npcbnl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/shawn/Desktop/imp/learning/small projects/Company presentations/Too Good to Go/nyc_restaurant_data.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.1xtyswo12cd5vx171lhjb1npcbnl' name='Restaurants' table='[Restaurants$]' type='table'>
            <columns gridOrigin='A1:I101:no:A1:I101:0' header='yes' outcome='6'>
              <column datatype='integer' name='Restaurant ID' ordinal='0' />
              <column datatype='string' name='Restaurant Name' ordinal='1' />
              <column datatype='string' name='Location' ordinal='2' />
              <column datatype='string' name='Address' ordinal='3' />
              <column datatype='string' name='Neighborhood' ordinal='4' />
              <column datatype='string' name='Cuisine Type' ordinal='5' />
              <column datatype='string' name='Restaurant Type' ordinal='6' />
              <column datatype='integer' name='Opening Year' ordinal='7' />
              <column datatype='integer' name='Number of Employees' ordinal='8' />
            </columns>
          </relation>
          <relation connection='excel-direct.1xtyswo12cd5vx171lhjb1npcbnl' name='Food Saved' table='[&apos;Food Saved$&apos;]' type='table'>
            <columns gridOrigin='A1:G301:no:A1:G301:0' header='yes' outcome='6'>
              <column datatype='string' name='Food Saved ID' ordinal='0' />
              <column datatype='integer' name='Restaurant ID' ordinal='1' />
              <column datatype='date' name='Date of Saving' ordinal='2' />
              <column datatype='real' name='Amount of Food Saved (kg)' ordinal='3' />
              <column datatype='real' name='Cost of Saved Food ($)' ordinal='4' />
              <column datatype='string' name='Saving Method' ordinal='5' />
              <column datatype='string' name='Recipient of Saved Food' ordinal='6' />
            </columns>
          </relation>
          <relation connection='excel-direct.1xtyswo12cd5vx171lhjb1npcbnl' name='Food Waste' table='[&apos;Food Waste$&apos;]' type='table'>
            <columns gridOrigin='A1:H501:no:A1:H501:0' header='yes' outcome='6'>
              <column datatype='string' name='Food Waste ID' ordinal='0' />
              <column datatype='integer' name='Restaurant ID' ordinal='1' />
              <column datatype='date' name='Date of Waste' ordinal='2' />
              <column datatype='real' name='Amount of Food Wasted (kg)' ordinal='3' />
              <column datatype='real' name='Cost of Wasted Food ($)' ordinal='4' />
              <column datatype='string' name='Waste Type' ordinal='5' />
              <column datatype='string' name='Reason for Waste' ordinal='6' />
              <column datatype='string' name='Waste Disposal Method' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Address]' value='[Restaurants].[Address]' />
          <map key='[Amount of Food Saved (kg)]' value='[Food Saved].[Amount of Food Saved (kg)]' />
          <map key='[Amount of Food Wasted (kg)]' value='[Food Waste].[Amount of Food Wasted (kg)]' />
          <map key='[Cost of Saved Food ($)]' value='[Food Saved].[Cost of Saved Food ($)]' />
          <map key='[Cost of Wasted Food ($)]' value='[Food Waste].[Cost of Wasted Food ($)]' />
          <map key='[Cuisine Type]' value='[Restaurants].[Cuisine Type]' />
          <map key='[Date of Saving]' value='[Food Saved].[Date of Saving]' />
          <map key='[Date of Waste]' value='[Food Waste].[Date of Waste]' />
          <map key='[Food Saved ID]' value='[Food Saved].[Food Saved ID]' />
          <map key='[Food Waste ID]' value='[Food Waste].[Food Waste ID]' />
          <map key='[Location]' value='[Restaurants].[Location]' />
          <map key='[Neighborhood]' value='[Restaurants].[Neighborhood]' />
          <map key='[Number of Employees]' value='[Restaurants].[Number of Employees]' />
          <map key='[Opening Year]' value='[Restaurants].[Opening Year]' />
          <map key='[Reason for Waste]' value='[Food Waste].[Reason for Waste]' />
          <map key='[Recipient of Saved Food]' value='[Food Saved].[Recipient of Saved Food]' />
          <map key='[Restaurant ID (Food Waste)]' value='[Food Waste].[Restaurant ID]' />
          <map key='[Restaurant ID (Restaurants)]' value='[Restaurants].[Restaurant ID]' />
          <map key='[Restaurant ID]' value='[Food Saved].[Restaurant ID]' />
          <map key='[Restaurant Name]' value='[Restaurants].[Restaurant Name]' />
          <map key='[Restaurant Type]' value='[Restaurants].[Restaurant Type]' />
          <map key='[Saving Method]' value='[Food Saved].[Saving Method]' />
          <map key='[Waste Disposal Method]' value='[Food Waste].[Waste Disposal Method]' />
          <map key='[Waste Type]' value='[Food Waste].[Waste Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Restaurants]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I101:no:A1:I101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Food Saved]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G301:no:A1:G301:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Food Waste]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H501:no:A1:H501:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restaurant ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Restaurant ID (Restaurants)]</local-name>
            <parent-name>[Restaurants]</parent-name>
            <remote-alias>Restaurant ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restaurant Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Restaurant Name]</local-name>
            <parent-name>[Restaurants]</parent-name>
            <remote-alias>Restaurant Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Restaurants]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[Restaurants]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighborhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neighborhood]</local-name>
            <parent-name>[Restaurants]</parent-name>
            <remote-alias>Neighborhood</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cuisine Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cuisine Type]</local-name>
            <parent-name>[Restaurants]</parent-name>
            <remote-alias>Cuisine Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restaurant Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Restaurant Type]</local-name>
            <parent-name>[Restaurants]</parent-name>
            <remote-alias>Restaurant Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Opening Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Opening Year]</local-name>
            <parent-name>[Restaurants]</parent-name>
            <remote-alias>Opening Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Employees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Employees]</local-name>
            <parent-name>[Restaurants]</parent-name>
            <remote-alias>Number of Employees</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food Saved ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food Saved ID]</local-name>
            <parent-name>[Food Saved]</parent-name>
            <remote-alias>Food Saved ID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restaurant ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Restaurant ID]</local-name>
            <parent-name>[Food Saved]</parent-name>
            <remote-alias>Restaurant ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of Saving</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date of Saving]</local-name>
            <parent-name>[Food Saved]</parent-name>
            <remote-alias>Date of Saving</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount of Food Saved (kg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Amount of Food Saved (kg)]</local-name>
            <parent-name>[Food Saved]</parent-name>
            <remote-alias>Amount of Food Saved (kg)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Saved Food ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Saved Food ($)]</local-name>
            <parent-name>[Food Saved]</parent-name>
            <remote-alias>Cost of Saved Food ($)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Saving Method</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Saving Method]</local-name>
            <parent-name>[Food Saved]</parent-name>
            <remote-alias>Saving Method</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recipient of Saved Food</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Recipient of Saved Food]</local-name>
            <parent-name>[Food Saved]</parent-name>
            <remote-alias>Recipient of Saved Food</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food Waste ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Food Waste ID]</local-name>
            <parent-name>[Food Waste]</parent-name>
            <remote-alias>Food Waste ID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restaurant ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Restaurant ID (Food Waste)]</local-name>
            <parent-name>[Food Waste]</parent-name>
            <remote-alias>Restaurant ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of Waste</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date of Waste]</local-name>
            <parent-name>[Food Waste]</parent-name>
            <remote-alias>Date of Waste</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount of Food Wasted (kg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Amount of Food Wasted (kg)]</local-name>
            <parent-name>[Food Waste]</parent-name>
            <remote-alias>Amount of Food Wasted (kg)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Wasted Food ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Wasted Food ($)]</local-name>
            <parent-name>[Food Waste]</parent-name>
            <remote-alias>Cost of Wasted Food ($)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Waste Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Waste Type]</local-name>
            <parent-name>[Food Waste]</parent-name>
            <remote-alias>Waste Type</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reason for Waste</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Reason for Waste]</local-name>
            <parent-name>[Food Waste]</parent-name>
            <remote-alias>Reason for Waste</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Waste Disposal Method</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Waste Disposal Method]</local-name>
            <parent-name>[Food Waste]</parent-name>
            <remote-alias>Waste Disposal Method</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Amount of Food Saved (kg)]' role='measure' type='quantitative' />
      <column caption='% Food Saved' datatype='real' default-format='p0.00%' name='[Calculation_3441594599191535620]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Amount of Food Saved (kg)])/AVG([Amount of Food Wasted (kg)])' />
      </column>
      <column datatype='real' name='[Cost of Saved Food ($)]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date of Saving]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[Location - Split 3]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
        <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 1 ) ))' />
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[Location - Split 4]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
        <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) ))' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Location]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Opening Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Restaurant ID (Food Waste)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Restaurant ID (Restaurants)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Restaurant ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Restaurant Type]' role='dimension' type='nominal' />
      <column caption='Food Saved' datatype='table' name='[__tableau_internal_object_id__].[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]' role='measure' type='quantitative' />
      <column caption='Food Waste' datatype='table' name='[__tableau_internal_object_id__].[Food Waste_72AACD0DAB35430282F51342D717E20F]' role='measure' type='quantitative' />
      <column caption='Restaurants' datatype='table' name='[__tableau_internal_object_id__].[Restaurants_36A5B3459C1840B383FA4C192436B828]' role='measure' type='quantitative' />
      <column-instance column='[Location - Split 3]' derivation='None' name='[none:Location - Split 3:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Location - Split 3]' derivation='None' name='[none:Location - Split 3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Location - Split 4]' derivation='None' name='[none:Location - Split 4:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Location - Split 4]' derivation='None' name='[none:Location - Split 4:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Restaurant Type]' derivation='None' name='[none:Restaurant Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date of Saving]' derivation='Quarter' name='[qr:Date of Saving:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Amount of Food Saved (kg)]' derivation='Sum' name='[sum:Amount of Food Saved (kg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cost of Saved Food ($)]' derivation='Sum' name='[sum:Cost of Saved Food ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date of Saving]' derivation='Year' name='[yr:Date of Saving:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Latitude,Longitude,Restaurant Type)' hidden='true' name='[Action (Latitude,Longitude,Restaurant Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Location - Split 3:ok]' />
          <groupfilter function='level-members' level='[none:Location - Split 4:ok]' />
          <groupfilter function='level-members' level='[Restaurant Type]' />
        </groupfilter>
      </group>
      <group caption='Action (Restaurant Type)' hidden='true' name='[Action (Restaurant Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Restaurant Type]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date of Saving),QUARTER(Date of Saving))' hidden='true' name='[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date of Saving:ok]' />
          <groupfilter function='level-members' level='[qr:Date of Saving:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Location - Split 3:qk]' />
          <groupfilter function='level-members' level='[none:Location - Split 4:qk]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/shawn/AppData/Local/Temp/TableauTemp/#TableauTemp_1jhi6i30whh05d1eisj2t04we359.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/21/2025 10:06:46 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='Restaurants_36A5B3459C1840B383FA4C192436B828' table='[Extract].[Restaurants_36A5B3459C1840B383FA4C192436B828]' type='table' />
            <relation name='Food Saved_7D816FF0F2854D9AB67EE52E60558EE9' table='[Extract].[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]' type='table' />
            <relation name='Food Waste_72AACD0DAB35430282F51342D717E20F' table='[Extract].[Food Waste_72AACD0DAB35430282F51342D717E20F]' type='table' />
          </relation>
          <cols>
            <map key='[Address]' value='[Restaurants_36A5B3459C1840B383FA4C192436B828].[Address]' />
            <map key='[Amount of Food Saved (kg)]' value='[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9].[Amount of Food Saved (kg)]' />
            <map key='[Amount of Food Wasted (kg)]' value='[Food Waste_72AACD0DAB35430282F51342D717E20F].[Amount of Food Wasted (kg)]' />
            <map key='[Cost of Saved Food ($)]' value='[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9].[Cost of Saved Food ($)]' />
            <map key='[Cost of Wasted Food ($)]' value='[Food Waste_72AACD0DAB35430282F51342D717E20F].[Cost of Wasted Food ($)]' />
            <map key='[Cuisine Type]' value='[Restaurants_36A5B3459C1840B383FA4C192436B828].[Cuisine Type]' />
            <map key='[Date of Saving]' value='[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9].[Date of Saving]' />
            <map key='[Date of Waste]' value='[Food Waste_72AACD0DAB35430282F51342D717E20F].[Date of Waste]' />
            <map key='[Food Saved ID]' value='[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9].[Food Saved ID]' />
            <map key='[Food Waste ID]' value='[Food Waste_72AACD0DAB35430282F51342D717E20F].[Food Waste ID]' />
            <map key='[Location]' value='[Restaurants_36A5B3459C1840B383FA4C192436B828].[Location]' />
            <map key='[Neighborhood]' value='[Restaurants_36A5B3459C1840B383FA4C192436B828].[Neighborhood]' />
            <map key='[Number of Employees]' value='[Restaurants_36A5B3459C1840B383FA4C192436B828].[Number of Employees]' />
            <map key='[Opening Year]' value='[Restaurants_36A5B3459C1840B383FA4C192436B828].[Opening Year]' />
            <map key='[Reason for Waste]' value='[Food Waste_72AACD0DAB35430282F51342D717E20F].[Reason for Waste]' />
            <map key='[Recipient of Saved Food]' value='[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9].[Recipient of Saved Food]' />
            <map key='[Restaurant ID (Food Waste)]' value='[Food Waste_72AACD0DAB35430282F51342D717E20F].[Restaurant ID]' />
            <map key='[Restaurant ID (Restaurants)]' value='[Restaurants_36A5B3459C1840B383FA4C192436B828].[Restaurant ID]' />
            <map key='[Restaurant ID]' value='[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9].[Restaurant ID]' />
            <map key='[Restaurant Name]' value='[Restaurants_36A5B3459C1840B383FA4C192436B828].[Restaurant Name]' />
            <map key='[Restaurant Type]' value='[Restaurants_36A5B3459C1840B383FA4C192436B828].[Restaurant Type]' />
            <map key='[Saving Method]' value='[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9].[Saving Method]' />
            <map key='[Waste Disposal Method]' value='[Food Waste_72AACD0DAB35430282F51342D717E20F].[Waste Disposal Method]' />
            <map key='[Waste Type]' value='[Food Waste_72AACD0DAB35430282F51342D717E20F].[Waste Type]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Restaurant ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Restaurant ID (Restaurants)]</local-name>
              <parent-name>[Restaurants_36A5B3459C1840B383FA4C192436B828]</parent-name>
              <remote-alias>Restaurant ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Restaurants</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Restaurant Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Restaurant Name]</local-name>
              <parent-name>[Restaurants_36A5B3459C1840B383FA4C192436B828]</parent-name>
              <remote-alias>Restaurant Name</remote-alias>
              <ordinal>1</ordinal>
              <family>Restaurants</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Restaurants_36A5B3459C1840B383FA4C192436B828]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>2</ordinal>
              <family>Restaurants</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Address]</local-name>
              <parent-name>[Restaurants_36A5B3459C1840B383FA4C192436B828]</parent-name>
              <remote-alias>Address</remote-alias>
              <ordinal>3</ordinal>
              <family>Restaurants</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>94</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Neighborhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Neighborhood]</local-name>
              <parent-name>[Restaurants_36A5B3459C1840B383FA4C192436B828]</parent-name>
              <remote-alias>Neighborhood</remote-alias>
              <ordinal>4</ordinal>
              <family>Restaurants</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cuisine Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Cuisine Type]</local-name>
              <parent-name>[Restaurants_36A5B3459C1840B383FA4C192436B828]</parent-name>
              <remote-alias>Cuisine Type</remote-alias>
              <ordinal>5</ordinal>
              <family>Restaurants</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Restaurant Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Restaurant Type]</local-name>
              <parent-name>[Restaurants_36A5B3459C1840B383FA4C192436B828]</parent-name>
              <remote-alias>Restaurant Type</remote-alias>
              <ordinal>6</ordinal>
              <family>Restaurants</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Opening Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Opening Year]</local-name>
              <parent-name>[Restaurants_36A5B3459C1840B383FA4C192436B828]</parent-name>
              <remote-alias>Opening Year</remote-alias>
              <ordinal>7</ordinal>
              <family>Restaurants</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Employees</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Employees]</local-name>
              <parent-name>[Restaurants_36A5B3459C1840B383FA4C192436B828]</parent-name>
              <remote-alias>Number of Employees</remote-alias>
              <ordinal>8</ordinal>
              <family>Restaurants</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Restaurants_36A5B3459C1840B383FA4C192436B828]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Food Saved ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Food Saved ID]</local-name>
              <parent-name>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</parent-name>
              <remote-alias>Food Saved ID</remote-alias>
              <ordinal>9</ordinal>
              <family>Food Saved</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>300</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Restaurant ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Restaurant ID]</local-name>
              <parent-name>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</parent-name>
              <remote-alias>Restaurant ID</remote-alias>
              <ordinal>10</ordinal>
              <family>Food Saved</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>96</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date of Saving</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date of Saving]</local-name>
              <parent-name>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</parent-name>
              <remote-alias>Date of Saving</remote-alias>
              <ordinal>11</ordinal>
              <family>Food Saved</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>263</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Amount of Food Saved (kg)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Amount of Food Saved (kg)]</local-name>
              <parent-name>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</parent-name>
              <remote-alias>Amount of Food Saved (kg)</remote-alias>
              <ordinal>12</ordinal>
              <family>Food Saved</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>282</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cost of Saved Food ($)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Cost of Saved Food ($)]</local-name>
              <parent-name>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</parent-name>
              <remote-alias>Cost of Saved Food ($)</remote-alias>
              <ordinal>13</ordinal>
              <family>Food Saved</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>297</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Saving Method</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Saving Method]</local-name>
              <parent-name>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</parent-name>
              <remote-alias>Saving Method</remote-alias>
              <ordinal>14</ordinal>
              <family>Food Saved</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recipient of Saved Food</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Recipient of Saved Food]</local-name>
              <parent-name>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</parent-name>
              <remote-alias>Recipient of Saved Food</remote-alias>
              <ordinal>15</ordinal>
              <family>Food Saved</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Food Waste ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Food Waste ID]</local-name>
              <parent-name>[Food Waste_72AACD0DAB35430282F51342D717E20F]</parent-name>
              <remote-alias>Food Waste ID</remote-alias>
              <ordinal>16</ordinal>
              <family>Food Waste</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Restaurant ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Restaurant ID (Food Waste)]</local-name>
              <parent-name>[Food Waste_72AACD0DAB35430282F51342D717E20F]</parent-name>
              <remote-alias>Restaurant ID</remote-alias>
              <ordinal>17</ordinal>
              <family>Food Waste</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date of Waste</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date of Waste]</local-name>
              <parent-name>[Food Waste_72AACD0DAB35430282F51342D717E20F]</parent-name>
              <remote-alias>Date of Waste</remote-alias>
              <ordinal>18</ordinal>
              <family>Food Waste</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>370</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Amount of Food Wasted (kg)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Amount of Food Wasted (kg)]</local-name>
              <parent-name>[Food Waste_72AACD0DAB35430282F51342D717E20F]</parent-name>
              <remote-alias>Amount of Food Wasted (kg)</remote-alias>
              <ordinal>19</ordinal>
              <family>Food Waste</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>478</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cost of Wasted Food ($)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Cost of Wasted Food ($)]</local-name>
              <parent-name>[Food Waste_72AACD0DAB35430282F51342D717E20F]</parent-name>
              <remote-alias>Cost of Wasted Food ($)</remote-alias>
              <ordinal>20</ordinal>
              <family>Food Waste</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Waste Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Waste Type]</local-name>
              <parent-name>[Food Waste_72AACD0DAB35430282F51342D717E20F]</parent-name>
              <remote-alias>Waste Type</remote-alias>
              <ordinal>21</ordinal>
              <family>Food Waste</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Reason for Waste</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Reason for Waste]</local-name>
              <parent-name>[Food Waste_72AACD0DAB35430282F51342D717E20F]</parent-name>
              <remote-alias>Reason for Waste</remote-alias>
              <ordinal>22</ordinal>
              <family>Food Waste</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Waste Disposal Method</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Waste Disposal Method]</local-name>
              <parent-name>[Food Waste_72AACD0DAB35430282F51342D717E20F]</parent-name>
              <remote-alias>Waste Disposal Method</remote-alias>
              <ordinal>23</ordinal>
              <family>Food Waste</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Food Waste_72AACD0DAB35430282F51342D717E20F]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1s0llsg1brtrxz12dmleb1imtzmv]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Cost of Saved Food ($):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Restaurant Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sit-down&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Food Truck&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fine Dining&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fast Casual&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Food Waste ID' />
        <field-sort-custom-order field='Restaurant ID (Food Waste)' />
        <field-sort-custom-order field='Date of Waste' />
        <field-sort-custom-order field='Amount of Food Wasted (kg)' />
        <field-sort-custom-order field='Cost of Wasted Food ($)' />
        <field-sort-custom-order field='Waste Type' />
        <field-sort-custom-order field='Reason for Waste' />
        <field-sort-custom-order field='Waste Disposal Method' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Food Saved' id='Food Saved_7D816FF0F2854D9AB67EE52E60558EE9'>
            <properties context=''>
              <relation connection='excel-direct.1xtyswo12cd5vx171lhjb1npcbnl' name='Food Saved' table='[&apos;Food Saved$&apos;]' type='table'>
                <columns gridOrigin='A1:G301:no:A1:G301:0' header='yes' outcome='6'>
                  <column datatype='string' name='Food Saved ID' ordinal='0' />
                  <column datatype='integer' name='Restaurant ID' ordinal='1' />
                  <column datatype='date' name='Date of Saving' ordinal='2' />
                  <column datatype='real' name='Amount of Food Saved (kg)' ordinal='3' />
                  <column datatype='real' name='Cost of Saved Food ($)' ordinal='4' />
                  <column datatype='string' name='Saving Method' ordinal='5' />
                  <column datatype='string' name='Recipient of Saved Food' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Food Saved_7D816FF0F2854D9AB67EE52E60558EE9' table='[Extract].[Food Saved_7D816FF0F2854D9AB67EE52E60558EE9]' type='table' />
            </properties>
          </object>
          <object caption='Food Waste' id='Food Waste_72AACD0DAB35430282F51342D717E20F'>
            <properties context=''>
              <relation connection='excel-direct.1xtyswo12cd5vx171lhjb1npcbnl' name='Food Waste' table='[&apos;Food Waste$&apos;]' type='table'>
                <columns gridOrigin='A1:H501:no:A1:H501:0' header='yes' outcome='6'>
                  <column datatype='string' name='Food Waste ID' ordinal='0' />
                  <column datatype='integer' name='Restaurant ID' ordinal='1' />
                  <column datatype='date' name='Date of Waste' ordinal='2' />
                  <column datatype='real' name='Amount of Food Wasted (kg)' ordinal='3' />
                  <column datatype='real' name='Cost of Wasted Food ($)' ordinal='4' />
                  <column datatype='string' name='Waste Type' ordinal='5' />
                  <column datatype='string' name='Reason for Waste' ordinal='6' />
                  <column datatype='string' name='Waste Disposal Method' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Food Waste_72AACD0DAB35430282F51342D717E20F' table='[Extract].[Food Waste_72AACD0DAB35430282F51342D717E20F]' type='table' />
            </properties>
          </object>
          <object caption='Restaurants' id='Restaurants_36A5B3459C1840B383FA4C192436B828'>
            <properties context=''>
              <relation connection='excel-direct.1xtyswo12cd5vx171lhjb1npcbnl' name='Restaurants' table='[Restaurants$]' type='table'>
                <columns gridOrigin='A1:I101:no:A1:I101:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Restaurant ID' ordinal='0' />
                  <column datatype='string' name='Restaurant Name' ordinal='1' />
                  <column datatype='string' name='Location' ordinal='2' />
                  <column datatype='string' name='Address' ordinal='3' />
                  <column datatype='string' name='Neighborhood' ordinal='4' />
                  <column datatype='string' name='Cuisine Type' ordinal='5' />
                  <column datatype='string' name='Restaurant Type' ordinal='6' />
                  <column datatype='integer' name='Opening Year' ordinal='7' />
                  <column datatype='integer' name='Number of Employees' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Restaurants_36A5B3459C1840B383FA4C192436B828' table='[Extract].[Restaurants_36A5B3459C1840B383FA4C192436B828]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Restaurant ID (Restaurants)]' />
              <expression op='[Restaurant ID]' />
            </expression>
            <first-end-point object-id='Restaurants_36A5B3459C1840B383FA4C192436B828' />
            <second-end-point object-id='Food Saved_7D816FF0F2854D9AB67EE52E60558EE9' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Restaurant ID (Restaurants)]' />
              <expression op='[Restaurant ID (Food Waste)]' />
            </expression>
            <first-end-point object-id='Restaurants_36A5B3459C1840B383FA4C192436B828' />
            <second-end-point object-id='Food Waste_72AACD0DAB35430282F51342D717E20F' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_7F0236F747A6451E97C6BA4DBE5531A4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Food Saved by Cuisine' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_506AF30B619645A3947F8FBE1879FB60]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Food Saved by Cuisine - Geo' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_6DEA3DFB14F34711B908A53DFDAEABF8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Total Food Saved ($) - Trend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_7252526311694F7D8E661E225A70427A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Total Food Saved (Kg)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_C8781FCD20EC490880EB678ADC6231C2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Total Food Saved (Kg) - Trend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_8F193986C8BD480FB5E68ADDB97FBC45]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Total Food Saved ($) - Overall' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Food Saved by Cuisine'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Food Saved by Cuisine</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurants+ (nyc_restaurant_data)' name='federated.1s0llsg1brtrxz12dmleb1imtzmv' />
          </datasources>
          <datasource-dependencies datasource='federated.1s0llsg1brtrxz12dmleb1imtzmv'>
            <column datatype='real' name='[Amount of Food Saved (kg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Cost of Saved Food ($)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date of Saving]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[Location - Split 3]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[Location - Split 4]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[Restaurant Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Saving Method]' role='dimension' type='nominal' />
            <column-instance column='[Restaurant Type]' derivation='Count' name='[cnt:Restaurant Type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location - Split 3]' derivation='None' name='[none:Location - Split 3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Location - Split 4]' derivation='None' name='[none:Location - Split 4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Restaurant Type]' derivation='None' name='[none:Restaurant Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Saving Method]' derivation='None' name='[none:Saving Method:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date of Saving]' derivation='Quarter' name='[qr:Date of Saving:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Amount of Food Saved (kg)]' derivation='Sum' name='[sum:Amount of Food Saved (kg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cost of Saved Food ($)]' derivation='Sum' name='[sum:Cost of Saved Food ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date of Saving]' derivation='Year' name='[yr:Date of Saving:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Latitude,Longitude,Restaurant Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_506AF30B619645A3947F8FBE1879FB60]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Location - Split 3:ok]' />
              <groupfilter function='level-members' level='[none:Location - Split 4:ok]' />
              <groupfilter function='level-members' level='[Restaurant Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_C8781FCD20EC490880EB678ADC6231C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date of Saving:ok]' />
              <groupfilter function='level-members' level='[qr:Date of Saving:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Restaurant Type:nk]' direction='ASC' using='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[cnt:Restaurant Type:qk]' />
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Saving Method:nk]'>
            <groupfilter function='member' level='[none:Saving Method:nk]' member='&quot;Repurposing&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Saving Method:nk]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Latitude,Longitude,Restaurant Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#afe2c3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Restaurant Type:nk]' />
              <tooltip column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Cost of Saved Food ($):qk]' />
              <text column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Restaurant Type:nk]' />
              <size column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]' />
              <text column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F0903B3D-AC3D-406F-84BB-DC9C9FE0C354}' />
    </worksheet>
    <worksheet name='Food Saved by Cuisine - Geo'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>NYC Restuarnts Reducing Food Wate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurants+ (nyc_restaurant_data)' name='federated.1s0llsg1brtrxz12dmleb1imtzmv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1s0llsg1brtrxz12dmleb1imtzmv'>
            <column datatype='real' name='[Amount of Food Saved (kg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Cost of Wasted Food ($)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date of Saving]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[Location - Split 3]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[Location - Split 4]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[Restaurant Type]' role='dimension' type='nominal' />
            <column-instance column='[Location - Split 3]' derivation='None' name='[none:Location - Split 3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location - Split 4]' derivation='None' name='[none:Location - Split 4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Restaurant Type]' derivation='None' name='[none:Restaurant Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date of Saving]' derivation='Quarter' name='[qr:Date of Saving:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Amount of Food Saved (kg)]' derivation='Sum' name='[sum:Amount of Food Saved (kg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cost of Wasted Food ($)]' derivation='Sum' name='[sum:Cost of Wasted Food ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date of Saving]' derivation='Year' name='[yr:Date of Saving:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Restaurant Type)]'>
            <groupfilter function='level-members' level='[Restaurant Type]' user:ui-action-filter='[Action1_7F0236F747A6451E97C6BA4DBE5531A4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_C8781FCD20EC490880EB678ADC6231C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date of Saving:ok]' />
              <groupfilter function='level-members' level='[qr:Date of Saving:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Exclusions (Latitude,Longitude)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Location - Split 3:qk]' />
                <groupfilter function='level-members' level='[none:Location - Split 4:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.502153' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.725502000000006' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.502755000000001' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.080022999999997' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.506497000000003' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.967923999999996' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.508786999999998' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.021092999999993' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.517032' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.944693000000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.517097999999997' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.949207000000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.521842999999997' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.089045999999996' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.525765' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.994602' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.533814999999997' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.708269000000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.546056999999998' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.908505000000005' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.546115' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.063321999999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.546810000000001' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.970967999999999' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.549875999999998' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.081727999999998' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.564605' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.035559000000006' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.565420000000003' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.955713000000003' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.568250999999997' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.088382999999993' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.570712' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.039264000000003' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.573245' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.937369000000004' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.575786999999998' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.827252000000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.576126000000002' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.867059999999995' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.577086999999999' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.847881000000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.577323' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.093157000000005' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.579588000000001' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.046609000000004' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.587736' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.927204000000003' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.591352000000001' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.782424000000006' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.597821000000003' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.974529000000004' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.599642000000003' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.024949000000007' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.603749999999998' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.969098000000002' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.753864' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.016318999999996' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.755927999999997' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.009044000000003' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.756701999999997' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-74.015755999999996' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.869343000000001' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.746075000000005' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Location - Split 3:qk]' member='40.886935000000001' />
                  <groupfilter function='member' level='[none:Location - Split 4:qk]' member='-73.700917000000004' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Exclusions (Latitude,Longitude)]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Restaurant Type)]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Location - Split 4:qk]' field-type='quantitative' max='-8172903.2859520363' min='-8307099.5420504129' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Location - Split 3:qk]' field-type='quantitative' max='5003556.6936185444' min='4921334.857419082' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#afe2c3' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Restaurant Type:nk]' />
              <size column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]' />
              <tooltip column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Cost of Wasted Food ($):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Restaurant Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Restaurant Type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Amount of Food Saved (kg):&#9;</run>
                <run bold='true'><![CDATA[<[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cost of Wasted Food ($):&#9;</run>
                <run bold='true'><![CDATA[<[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Cost of Wasted Food ($):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-color' value='#20aa57' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Location - Split 3:qk]</rows>
        <cols>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Location - Split 4:qk]</cols>
      </table>
      <simple-id uuid='{39BC5958-4571-412A-ACEA-A95C79CCA6D2}' />
    </worksheet>
    <worksheet name='Total Food Saved ($) - Overall'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurants+ (nyc_restaurant_data)' name='federated.1s0llsg1brtrxz12dmleb1imtzmv' />
          </datasources>
          <datasource-dependencies datasource='federated.1s0llsg1brtrxz12dmleb1imtzmv'>
            <column datatype='real' name='[Cost of Saved Food ($)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date of Saving]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[Location - Split 3]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[Location - Split 4]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[Restaurant Type]' role='dimension' type='nominal' />
            <column-instance column='[Location - Split 3]' derivation='None' name='[none:Location - Split 3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Location - Split 4]' derivation='None' name='[none:Location - Split 4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date of Saving]' derivation='Quarter' name='[qr:Date of Saving:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cost of Saved Food ($)]' derivation='Sum' name='[sum:Cost of Saved Food ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date of Saving]' derivation='Year' name='[yr:Date of Saving:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Latitude,Longitude,Restaurant Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_506AF30B619645A3947F8FBE1879FB60]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Location - Split 3:ok]' />
              <groupfilter function='level-members' level='[none:Location - Split 4:ok]' />
              <groupfilter function='level-members' level='[Restaurant Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Restaurant Type)]'>
            <groupfilter function='level-members' level='[Restaurant Type]' user:ui-action-filter='[Action1_7F0236F747A6451E97C6BA4DBE5531A4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_C8781FCD20EC490880EB678ADC6231C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date of Saving:ok]' />
              <groupfilter function='level-members' level='[qr:Date of Saving:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Restaurant Type)]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Latitude,Longitude,Restaurant Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#afe2c3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Cost of Saved Food ($):qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#008714' fontname='Segoe UI Black' fontsize='25'>$&lt;</run>
                <run fontcolor='#008714' fontname='Segoe UI Black' fontsize='25'>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Cost of Saved Food ($):qk]</run>
                <run fontcolor='#008714' fontname='Segoe UI Black' fontsize='25'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DA876F9A-703D-46E2-B137-6F53382541D6}' />
    </worksheet>
    <worksheet name='Total Food Saved ($) - Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurants+ (nyc_restaurant_data)' name='federated.1s0llsg1brtrxz12dmleb1imtzmv' />
          </datasources>
          <datasource-dependencies datasource='federated.1s0llsg1brtrxz12dmleb1imtzmv'>
            <column datatype='real' name='[Cost of Saved Food ($)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date of Saving]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[Location - Split 3]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[Location - Split 4]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[Restaurant Type]' role='dimension' type='nominal' />
            <column-instance column='[Location - Split 3]' derivation='None' name='[none:Location - Split 3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Location - Split 4]' derivation='None' name='[none:Location - Split 4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date of Saving]' derivation='Quarter' name='[qr:Date of Saving:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cost of Saved Food ($)]' derivation='Sum' name='[sum:Cost of Saved Food ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date of Saving]' derivation='Quarter-Trunc' name='[tqr:Date of Saving:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date of Saving]' derivation='Year' name='[yr:Date of Saving:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Latitude,Longitude,Restaurant Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_506AF30B619645A3947F8FBE1879FB60]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Location - Split 3:ok]' />
              <groupfilter function='level-members' level='[none:Location - Split 4:ok]' />
              <groupfilter function='level-members' level='[Restaurant Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Restaurant Type)]'>
            <groupfilter function='level-members' level='[Restaurant Type]' user:ui-action-filter='[Action1_7F0236F747A6451E97C6BA4DBE5531A4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_C8781FCD20EC490880EB678ADC6231C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date of Saving:ok]' />
              <groupfilter function='level-members' level='[qr:Date of Saving:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Restaurant Type)]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Latitude,Longitude,Restaurant Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[tqr:Date of Saving:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[tqr:Date of Saving:qk]' field-type='quantitative' max='#2025-01-16 13:15:57.745#' min='#2022-12-18 17:05:16.416#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c7e2d2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#008714' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Cost of Saved Food ($):qk]</rows>
        <cols>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[tqr:Date of Saving:qk]</cols>
      </table>
      <simple-id uuid='{3CEAB412-B65E-45B4-8326-315A6297FD06}' />
    </worksheet>
    <worksheet name='Total Food Saved (Kg)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurants+ (nyc_restaurant_data)' name='federated.1s0llsg1brtrxz12dmleb1imtzmv' />
          </datasources>
          <datasource-dependencies datasource='federated.1s0llsg1brtrxz12dmleb1imtzmv'>
            <column datatype='real' name='[Amount of Food Saved (kg)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date of Saving]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[Location - Split 3]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[Location - Split 4]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[Restaurant Type]' role='dimension' type='nominal' />
            <column-instance column='[Location - Split 3]' derivation='None' name='[none:Location - Split 3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Location - Split 4]' derivation='None' name='[none:Location - Split 4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date of Saving]' derivation='Quarter' name='[qr:Date of Saving:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Amount of Food Saved (kg)]' derivation='Sum' name='[sum:Amount of Food Saved (kg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date of Saving]' derivation='Year' name='[yr:Date of Saving:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Latitude,Longitude,Restaurant Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_506AF30B619645A3947F8FBE1879FB60]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Location - Split 3:ok]' />
              <groupfilter function='level-members' level='[none:Location - Split 4:ok]' />
              <groupfilter function='level-members' level='[Restaurant Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Restaurant Type)]'>
            <groupfilter function='level-members' level='[Restaurant Type]' user:ui-action-filter='[Action1_7F0236F747A6451E97C6BA4DBE5531A4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_C8781FCD20EC490880EB678ADC6231C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date of Saving:ok]' />
              <groupfilter function='level-members' level='[qr:Date of Saving:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Restaurant Type)]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (YEAR(Date of Saving),QUARTER(Date of Saving))]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Latitude,Longitude,Restaurant Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#afe2c3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#008714' fontname='Segoe UI Black' fontsize='25'>&lt;</run>
                <run fontcolor='#008714' fontname='Segoe UI Black' fontsize='25'>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]</run>
                <run fontcolor='#008714' fontname='Segoe UI Black' fontsize='25'>&gt; kg</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{93678E11-1E3A-4F73-8809-34FDC56A6E3B}' />
    </worksheet>
    <worksheet name='Total Food Saved (Kg) - Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='Restaurants+ (nyc_restaurant_data)' name='federated.1s0llsg1brtrxz12dmleb1imtzmv' />
          </datasources>
          <datasource-dependencies datasource='federated.1s0llsg1brtrxz12dmleb1imtzmv'>
            <column datatype='real' name='[Amount of Food Saved (kg)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date of Saving]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[Location - Split 3]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[Location - Split 4]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[Restaurant Type]' role='dimension' type='nominal' />
            <column-instance column='[Location - Split 3]' derivation='None' name='[none:Location - Split 3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Location - Split 4]' derivation='None' name='[none:Location - Split 4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date of Saving]' derivation='Quarter' name='[qr:Date of Saving:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Amount of Food Saved (kg)]' derivation='Sum' name='[sum:Amount of Food Saved (kg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date of Saving]' derivation='Year' name='[yr:Date of Saving:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Latitude,Longitude,Restaurant Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_506AF30B619645A3947F8FBE1879FB60]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Location - Split 3:ok]' />
              <groupfilter function='level-members' level='[none:Location - Split 4:ok]' />
              <groupfilter function='level-members' level='[Restaurant Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Restaurant Type)]'>
            <groupfilter function='level-members' level='[Restaurant Type]' user:ui-action-filter='[Action1_7F0236F747A6451E97C6BA4DBE5531A4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Restaurant Type)]</column>
            <column>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[Action (Latitude,Longitude,Restaurant Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]' value='76' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c7e2d2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00aa00' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]</rows>
        <cols>([federated.1s0llsg1brtrxz12dmleb1imtzmv].[yr:Date of Saving:ok] / [federated.1s0llsg1brtrxz12dmleb1imtzmv].[qr:Date of Saving:ok])</cols>
      </table>
      <simple-id uuid='{95BD657F-13ED-4301-8C32-196511D1D319}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Overview'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#13aa5056' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='5' />
          <format attr='border-color' value='#008714' />
        </style-rule>
      </style>
      <size maxheight='850' maxwidth='1200' minheight='850' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98118' id='35' param='horz' type-v2='layout-flow' w='98666' x='667' y='941'>
            <zone h='98118' id='33' type-v2='layout-basic' w='98666' x='667' y='941'>
              <zone h='93412' id='26' param='horz' type-v2='layout-flow' w='98666' x='667' y='941'>
                <zone h='93412' id='24' type-v2='layout-basic' w='98666' x='667' y='941'>
                  <zone h='77294' id='21' param='horz' type-v2='layout-flow' w='98666' x='667' y='17059'>
                    <zone h='77294' id='18' param='horz' type-v2='layout-flow' w='98666' x='667' y='17059'>
                      <zone h='77294' id='15' param='horz' type-v2='layout-flow' w='98666' x='667' y='17059'>
                        <zone h='77294' id='13' type-v2='layout-basic' w='98666' x='667' y='17059'>
                          <zone h='51494' id='5' param='horz' type-v2='layout-flow' w='98666' x='667' y='42859'>
                            <zone h='51494' id='1' param='horz' type-v2='layout-flow' w='98666' x='667' y='42859'>
                              <zone fixed-size='537' h='51494' id='12' is-fixed='true' name='Food Saved by Cuisine' w='45417' x='667' y='42859'>
                                <layout-cache type-h='fixed' type-w='fixed' />
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                              <zone h='51494' id='3' name='Food Saved by Cuisine - Geo' w='53249' x='46084' y='42859'>
                                <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                            </zone>
                          </zone>
                          <zone fixed-size='89' h='22203' id='7' is-fixed='true' name='Total Food Saved (Kg)' show-title='false' w='14167' x='44000' y='20656'>
                            <layout-cache fixed-size-w='222' type-h='fixed' type-w='fixed' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='22203' id='8' name='Total Food Saved (Kg) - Trend' show-title='false' w='41166' x='58167' y='20656'>
                            <layout-cache minheight='225' type-h='scalable' type-w='cell' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='22203' id='10' name='Total Food Saved ($) - Overall' show-title='false' w='14416' x='667' y='20656'>
                            <layout-cache fixed-size-h='203' fixed-size-w='60' type-h='fixed' type-w='fixed' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='22203' id='16' name='Total Food Saved ($) - Trend' show-title='false' w='28917' x='15083' y='20656'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone forceUpdate='true' h='3597' id='19' type-v2='text' w='44499' x='667' y='17059'>
                            <formatted-text>
                              <run bold='true' fontsize='15'>Revenue Generated from Saving Food</run>
                            </formatted-text>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone forceUpdate='true' h='3597' id='28' type-v2='text' w='54167' x='45166' y='17059'>
                            <formatted-text>
                              <run bold='true' fontsize='15'>Waste Reduced from Saving Food</run>
                            </formatted-text>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone fixed-size='137' h='9185' id='23' is-centered='0' is-fixed='true' is-scaled='1' param='D:/shawn/Desktop/imp/learning/small projects/Company presentations/Too Good to Go/logo.jpg' type-v2='bitmap' url='https://www.linkedin.com/in/shawn-dsouza/' w='7832' x='667' y='941'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='9185' id='27' type-v2='text' w='90834' x='8499' y='941'>
                    <formatted-text>
                      <run bold='true' fontname='Tableau Bold' fontsize='25'>Reducing  Food  Waste - One Meal at a Time </run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='6933' id='36' type-v2='text' w='98666' x='667' y='10126'>
                    <formatted-text>
                      <run bold='true' fontname='Segoe UI' fontsize='12'>Sustainability is a key driver to combat food wastage. Using generated data, what story can we tell to understand how restaurants mange over-produced meals to reduce revenue loss. </run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='4706' id='29' param='horz' type-v2='layout-flow' w='87915' x='667' y='94353'>
                <zone forceUpdate='true' h='4706' id='30' type-v2='text' w='87915' x='667' y='94353'>
                  <formatted-text>
                    <run bold='true' fontname='Segoe UI'>INSPRIATION</run>
                    <run fontname='Segoe UI'>: Too Good to Go (AI generated data) |  </run>
                    <run bold='true' fontname='Segoe UI'>CONCEPT</run>
                    <run fontname='Segoe UI'>: Dynamic Filtering | </run>
                    <run bold='true' fontname='Segoe UI'>DESIGN</run>
                    <run fontname='Segoe UI'>: Shawn D&apos;Souza</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='235' forceUpdate='true' h='4706' id='31' is-centered='0' is-fixed='true' is-scaled='1' param='D:/shawn/Downloads/Github_logo_PNG13.png' type-v2='bitmap' url='https://github.com/shawnd29/' w='5418' x='93915' y='94353'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
              <zone h='4706' id='32' is-scaled='1' param='D:/shawn/Downloads/linkedin.png' type-v2='bitmap' url='https://www.linkedin.com/in/shawn-dsouza/' w='5333' x='88582' y='94353'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{D91681BC-3366-423C-AF33-9C92A0D0D6C2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Total Food Saved (Kg)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F67F33C2-9279-4991-AC99-82B024F6E724}' />
    </window>
    <window class='worksheet' name='Total Food Saved (Kg) - Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[tqr:Date of Saving:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B620BB47-3CB9-405C-887F-9A44EF624D72}' />
    </window>
    <window class='worksheet' name='Total Food Saved ($) - Overall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2A0BACE1-82DE-4CBC-8FBE-2C6FC153BF53}' />
    </window>
    <window class='worksheet' name='Total Food Saved ($) - Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CB7DCAC7-7391-4C5C-A04A-2A7897458BBF}' />
    </window>
    <window class='worksheet' name='Food Saved by Cuisine'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Restaurant Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[:Measure Names]</field>
            <field>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Restaurant Type:nk]</field>
            <field>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[sum:Amount of Food Saved (kg):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDAF143D-2E76-4E59-832F-AA992CDFE9AF}' />
    </window>
    <window class='worksheet' name='Food Saved by Cuisine - Geo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Restaurant Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Restaurant Type:nk]</field>
            <field>[federated.1s0llsg1brtrxz12dmleb1imtzmv].[none:Saving Method:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8939E78-BD7D-40B9-9AA6-6D001B4BC662}' />
    </window>
    <window class='dashboard' maximized='true' name='Overview'>
      <viewpoints>
        <viewpoint name='Food Saved by Cuisine' />
        <viewpoint name='Food Saved by Cuisine - Geo'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Food Saved ($) - Overall' />
        <viewpoint name='Total Food Saved ($) - Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Food Saved (Kg)' />
        <viewpoint name='Total Food Saved (Kg) - Trend'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{09D328FE-D43E-4CA2-833C-16558E7235B1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Food Saved by Cuisine' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFPElEQVR4nO3az08UZwDG8eedmd3ZhQVEoWg0FKUx0qZNkx6aNL379/bak0nT9KQmTYwx
      eLAVDApKqzvuLvOrh21VwtADye6Kz/dzml9M3knmy8w7EKqqqgWYSiTpp51fZz0OYCaiWQ8A
      mKXkv4Ug6fb2HVUH2zMcDjBdyYcr1f4jlc/uz2oswNQ1vgKVVa3T5sZlVauqT5831/+zD/jY
      JE0bf37Y163LqV5lha5eaOnvQaVHz0e6vdXTne3s332lVhcS1XWtpW6sYV5r73WuvJS+W+9O
      +zqAM2kMII6kbFTp992hXmWlFruxNi61VEta6SXKy1p3/xzoi8/aikNQHHK9zEq96BfaupxO
      +RKAs2sM4MfNebWToBCkpU6sKJIGR5VacdBqL1aaBP1wY069NFKaRHqZFbq5lmq/P35iAOdF
      YwBz7fHU4KsrnRP71i+2JUlri+9v9LXF8WlWeo2nAz5aJ+7Yuq71y+O3uracaOew0MX5WNmo
      0vfX5/Rwb6iilL6+ejIM4Dxq/ArUToIO31aaawelSdBid3zY3utCe69zvvTgk9EYQKcVtJBG
      Gha14kjaOcy1+1euW2upLs4nCiFMe5zARJx4BQoh6Ntr48+YN9fGX3RurLz/snNliUkuPh38
      LxCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsJcfW
      lr6RjuZmNBRg+o4F8Oa3TKNHb2Y1FmDqeAWCtcYAWtc3FK+uSK3Wse2h01H65ZZCmkrJ+OER
      2u2JDxKYlKRpY3xhWfVgoHRzU6GTqupnino95X88Ub67q/bGhuqyULSwoPLVoUISSyEoJImq
      7K3yp0+nfR3AmTQ+AYpnu+MbO45V7D5T1O2qHo1UV7Xam5uq+n0pipU/3VFot1T1+6qyTKHT
      UdTrTfsagDNrfAIUz19IkoYPHozX9/ff7Rveu3/s2PLg4N1ySDsqPzgW+Ng1T4KjSKHbVbxy
      SYpjRfPzkqSQpoqWlk49Wf7kiaosm8hAgUlofAK0Pl9X1OkqXr6gYm9PimMdbT9We2NDoTev
      4d170x4nMBHNk+DlZUXdrlTVUtJSvLAwfrePIoWk8UeAc6nxbh7euz++2dNUdZ4r6nRUj0Ya
      bW8rxPG0xwhMzOm/zqtK9WAwXuz3322ui2LigwKmhb8EwxoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwNo/6fL5pW0a
      h9gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Food Saved by Cuisine - Geo' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='48' name='Total Food Saved ($) - Overall' width='144'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Food Saved ($) - Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='48' name='Total Food Saved (Kg)' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAAAwCAYAAACfQtEUAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALSUlEQVR4nO2de1BTVx7Hv/fmBSEhhjfhFawEELRaUVwUa9c6Vp126NhVd/vHdrp1ZrfW
      1qnjTKeP2d3aztTamXZ1aNeZVqc7Y7u21aJUu+0q8rAKClUeEt7hTQjyTCDkwb37R8cs4Z6Q
      iwIJu/fzFzm/c8/55eZ7z/mdc34hFMuyLAQE/ATa1w4ICExGEKSAXyEIUsCvEE8tyOu46gs/
      BAQACCOkgJ8hCFLArxAEKeBXCIIU8CsEQQr4FYIgBfwKQZACfoUgSAG/QhCkgF8hCFLArxAE
      KeBXCIIU8CsEQQr4FYIgBfwKQZACfgUnH1Lgf5f6vjq8feUQxhxjHFtWfBYOZh/0gVfu+IUg
      LzcXILcsFyzLcGwHsw8iKz7rvts+UnIE19qvPYh7RB+cjAP1dxtRZChEtbEaA9YB2CfsAAAx
      LUaoPBQZMavwQsYeXn04GQdudN5EQXMBGvobYLaZAQA0RSNEHoL0iHRsXrIZKeEpoKn/3YnN
      54Icc4zhx6YfiWL0RyZYJ/Jq83DmzllYHVZiHSfjRK+lFxfqL2LIOoy9a/ciUBJIrMuyDAoN
      hfis4gRG7aMcO8MyuDt6F4WGQhQaCpEYkoj9WfsRr4qf1fflL/j8USvvKkdzf7Ov3eCNzWnH
      jc5yj2Kcyk/tP+GdwneI0yTLMjhd8xWOleYSxUjCMGDAGz++AX2ffkZ+LxR8KsiR8RHk6fMw
      wTp96caco++rw6WmS5zyKmMVztXmzXh2sNgtyC39GIPWwdly0W/wqSALDYVoHWzzpQteiQyK
      wEMhSx6oDZZlUNpR6jaqsiyDS82XMe603Veb3eZu3DHdeSC//BGfxZBdI53I0898dJgpfFaO
      FrsFh64cQsPdBrdyiqKxLXk7IhURnGtkYhk2aLOxNWkb4hbFQkxLYLGb8XXNN8iv+47zvkyj
      Jow5xlyxpNU5DtNoH9EfXZgO+7P2I1IRiRsdZcgt+xgWu8WtDssy6Bzp9PreFho+EaSDceCf
      Vaf9ZsopaC5AY38Tp1yj1CBbm80pX6lZgQPrX0VEkLtQFVIlnknbgSpjpdeRnwIFEWG1LKLE
      2LlsJ6KV0QCAzLhMlHeX43JzAaeumJqbj69loAV/vvwXWOxmov2p1Kfw3Mrfg5rkv9VhxQ+N
      P+BS8yX0mHvAsAxUMhXWa9fht8t/h/z6fJyuOk1sb/Iuhk8EWdZRhrKOUl90zcHTSE1RNJ5K
      fRLqQLVbuVwix+5luz22J6LFkIoCvPYbKAlErCqGuDiZYCa8Xh8gliElPMVrvfuhpK3Eoxij
      ldHYnrzdTYx1fXX44OoH6B/rd6s7bBvGhfqLqOj6Gcnhybz6nvcY0mg24tTtU3Aw/13IqAPV
      SFg0/9sYLMvgvD6fOFJr1QlYG7t2xm0Ojw/jLmEqDpWHcbZ+Hn9oMxRShVvZBOvEl1VfonOk
      EwzLoKTtKq61X+e0lxyWiiWhSTP2zxsD1gGUdZQRbRRFI2dpjtvMoO/T493CdzlinIzRYkSR
      oYhX//M6Ql5pKUBu6Sduq2pdmA5vPfYWPin7BG1D7fPmi4Nx4EjxEdzsusmxRSuj8ebGNxEc
      EMy7PavDimOlR3G9nTvyRyujcWD9q5BL5G7lujAd/vHM57jVcxvHb/zdFVO2DrZiX/4+Tjs0
      RWN17Gq8mLkXwTIlb9/4Mu604cOfPkSPuYdjCxDL8NqG1/Bw9ApX2XQHGvfLvAlS36fHiYqT
      bmJUSBV47pHnOKPEfFDfV4/q3iqiLTMuEyGBIbzb6jH34P2S99E62MqxBcuUeDnrFU68eQ8W
      wKB1EKOEfUoSElqCcad1TgTZ1N+Ipv5Gom1NbCbSo9Jdr+0TdhQbijyKMS0yDQfWHYAqQIXv
      G/6Fz38+6TYremJeBGkaNeHY9WNuK0WKorE9ZTtSwvjFFrPJBOtEfl0+cctFIVUiO4G7kPFE
      RVcFjl7/G0Zs5Jjrr5vehlatJdosdgsOFx9GTW8Nr74YlsHVtquoMlbi5V+9glUxq3j76Q0W
      DAoNV4j3JDggGDmpORBNWkQNjQ+hy9xFbEsdqMaf1vzRFX9v0z0Bw2AzcWE2lTmPIW1OG07d
      PsWZBjZos7EjbYdbcDxftA22o9ZEPulIDtMhQe09nmVZBnm1eThc/B5RjDRFY6tum0cxOhgH
      Pi3/lLcYJzNiM+No6VEYBgwzvtYTRksvbnXfJtq26rYiMSTRrWxwbMDjadVi9WJEKaNcrymK
      RnJYKi8/5nyEzK/LR3FrMae8yFDEK9A9UnLE9fdsZaRMt4rMjFvrNhKQuHfk91X118QpKzEk
      Efsy93E+xMnU99UTdxoktBg5S5/G00ufRoBYhsb+Jnx07SPOAz0yPoILDd9hb+beWXmoGWYC
      LMj/TLmlvwUOxgEJLeHVlkws49zDIKncQ2135nx4cvrZsaDZNoLbPbeItkUBi5AWsdRrG8Wt
      JThbc4YjRgktxq7lu3B4y+FpxQgANaYa4vS4POph7Fq+E4GSQFAUDV2YDnsy9kAqknLq6vvq
      MGwb8eovHzTBGjyiWUm0VfdWobaX/6kQA5Zzb6ZbhU/G58kV801DfyM6hsixT7wqHmFBYdNe
      32sx4cvKLzgBOkXReD7jD9iVvpPXSNIzwl3JekJEi4jlNqeN154lHyjQ2Jj4GALEMo5t3GnD
      t7Xn3B4gmhaBoihiW22DrRgcH3K9djAOVBurefnh8/Sz+aayp9JjMkdqZCpxJJrM9fZr6B01
      ccpZlsHxG8dx/MZxj9dOPpGIIBxHAkCVsRIX67/HlqQtkNBitAwa8Fn5Z65cy8nIxDKPYr0f
      tOoEaIJj0DLQwrHVmmpQ3VuF1TGrAQDhQeFQBaiIWUpGSy/O6c9h97LdkIjEOKc/73FWmsr/
      lSDHHGOon3JefQ+pSIql4dNP1/YJO25187ux3kgKTYKIEnMeDgfjxImKEzhRccJrG7HBsVDK
      Zm/L7N4OA0mQDsaJC3UXsSxyOQLEMqhkwVisXozukW5O3V8OHM7jvP78jH2Yc0HuXrZ72qO2
      e3jK7PaUMf5xWS7+TUjp2rzkcbyYuZfYh8nShx4z9wYCgCpA5To/9oTZZobRwn+qnY70yHQk
      h+tQa6q9r+sVUgVyluZ4XYDNlMy4TOTX5WPAOsCx1fTWoMpYiTWxa0BRNDYkbkBZRymv/UW+
      LMgY0uqwonOYGweKKDEy4zwf97UPt7m+GjCVaEU0VAEqr31PzNKphFwix761+xATHDvjayW0
      GM+ueHZO9nCjFJFYqVlBtE2wTpy5c9aVbPyIZiXWazfMav8LUpBmuxkmQhwXIldPm9rfMdzh
      0RapjPAaP842UcooHN7yHjY9tIn392QigsLx+sbX8UTSE3Oyh0tRnhc3ANDc34zyrnIAvwwA
      ezJewLr4ddP6olVr8evFj/Hqf0HGkEazkTjSxaviESJXE664lz9IXl0DQFLo/J8YAUCQNAgv
      rX0Jv0nfieLWIpR2lMJoNrpGIV98yWtJaBKWhCYRN+0nWCcu1F9ERkwG5BI5AiWBOLD+VTxu
      rMSZO2fRcLcB9gk7xLQYcYvisDVpGzZos/Gt/ltiXyJKDNkk8VNTf1puIfwsSH5dPjHof37V
      83gy5UkfeCQwHeNOG94tfIcocKVMibc3HYJWnQBggU7ZTYRkWoVUibSINB94IzAdLMvgYsN3
      0JvqiPZopQYRinDX6wU3ZY/aR4npUZpgjdv5qcD8cObON6jva8Cjix9FcmgyQuQhoCkaTsaB
      1qE2nLr9BSqNlcQjVoqisS4+yy0tb8EJcnh8GH2EBNjkMB0n31Bg7nEwTtzsuknMK/WGVp2A
      jYkb3coWnCA1wRqc3HHS124IPCAKqQJ7MvZwkqD/A/B3cw3ZIUlOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Food Saved (Kg) - Trend' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
